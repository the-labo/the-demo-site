/**
 * Bud file for mappings
 */
'use strict'

const c = require('../controllers')
const sv = require('../services')
const h = require('../db/hooks')
const pl = require('../db/plugins')
const r = require('../db/resources')

const {camelcase} = require('stringcase')
const {mapping} = require('the-templates')

module.exports = [
  {
    name: 'ControllerMapping',
    requirePath: '../controllers',
    requireAs: 'c',
    mapping: Object.keys(c)
      .filter((name) => !['Ctrl'].includes(name))
      .map((name) => ({
        instanceName: camelcase(name),
        className: name
      })),
    cjs: true
  },
  {
    name: 'ResourceMapping',
    requirePath: '../db/resources',
    requireAs: 'r',
    mapping: Object.keys(r).map((name) => ({
      instanceName: name.replace(/Resource$/, ''),
      className: name
    })),
    cjs: true
  },
  {
    name: 'HookMapping',
    requirePath: '../db/hooks',
    requireAs: 'h',
    mapping: Object.keys(h).map((name) => ({
      instanceName: name.replace(/Hook$/, ''),
      className: name
    })),
    cjs: true
  },
  {
    name: 'PluginMapping',
    requirePath: '../db/plugins',
    requireAs: 'pl',
    mapping: Object.keys(pl).map((name) => ({
      instanceName: name.replace(/Plugin$/, ''),
      className: name
    })),
    cjs: true
  },
  {
    name: 'ServiceMapping',
    requirePath: '../services',
    requireAs: 'sv',
    mapping: Object.keys(sv)
      .filter((name) => /Service$/.test(name))
      .map((name) => ({
        instanceName: camelcase(name),
        className: name
      })),
    cjs: true
  }
].map(mapping)

if (!module.parent) {
  require('coz').render(__filename)
}